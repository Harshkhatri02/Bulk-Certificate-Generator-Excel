--background-header: #2c2c2e;
--background-body: #333333;
--background-nav: rgba(255, 255, 255, 0.1);
--background-li: #C0C0C0;
--background-head-content: rgba(255, 255, 255, 0.2);
--background-text-container: linear-gradient(135deg, #333333, #777777, #aaaaaa,#9f9f9f,#333333 ) ;
--background-transperant: rgba( 255, 255, 255, 0.25 );


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial, initial-scale=1.0">
    <title>Certificate Generator</title>
    <style>
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    max-width: 500px;
    width: 100%;
    box-sizing: border-box;
    overflow-y: auto; /* Allow scrolling if content overflows */
    height: 100%; /* Ensure it takes full height */
}

h1 {
    text-align: center;
    margin-bottom: 20px;
}

label {
    display: block;
    margin-bottom: 10px;
}

input[type="file"],
input[type="text"],
select {
    width: 100%; /* Full width */
    max-width: 100%; /* Prevent overflow */
    padding: 12px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

button {
    width: 100%; /* Full width */
    max-width: 100%; /* Prevent overflow */
    padding: 12px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    margin-top: 10px; /* Adjusted margin */
    box-sizing: border-box;
}

button:hover {
    background-color: #218838;
}

.single-certificate-fields {
    margin-bottom: 20px;
}

.single-certificate-fields .input-container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    background-color: #ffffff;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin-bottom: 10px;
}

.single-certificate-fields input[type="text"] {
    width: calc(100% - 22px); /* Adjust width to align with delete button width */
    margin-bottom: 10px;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
    font-size: 14px;
}

.delete-btn {
    background-color: #dc3545;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    padding: 5px 10px;
    font-size: 12px;
    width: 100%; /* Full width to match input field */
    margin-top: 10px; /* Space above the button */
}

.delete-btn:hover {
    background-color: #c82333;
}

.add-field-btn {
    background-color: #007bff;
    margin-bottom: 10px;
}

.add-field-btn:hover {
    background-color: #0056b3;
}


    </style>
</head>
<body>
    <div class="container">
        <h1>Certificate Generator</h1>
        <form action="/" method="post" enctype="multipart/form-data">
            <label for="template">Upload Certificate Template</label>
            <input type="file" name="template" id="template" required>

            <label for="download_option">Select Generation Option</label>
            <select name="download_option" id="download_option" required>
                <option value="single">Single Certificate</option>
                <option value="zip">Generate Zip for Multiple Certificates</option>
            </select>

            <div id="single-certificate-fields" class="single-certificate-fields">
                <!-- Dynamic fields will be generated here for single certificate -->
            </div>

            <label for="excel_file" id="excel_file_label" style="display:none;">Upload Excel File (for multiple certificates)</label>
            <input type="file" name="excel_file" id="excel_file" style="display:none;">

            <button type="submit">Next</button>
        </form>
    </div>
    <script>
        document.getElementById('download_option').addEventListener('change', function () {
            const option = this.value;
            const singleFields = document.getElementById('single-certificate-fields');
            const excelFileLabel = document.getElementById('excel_file_label');
            const excelFileInput = document.getElementById('excel_file');
    
            if (option === 'single') {
                singleFields.style.display = 'block';
                excelFileLabel.style.display = 'none';
                excelFileInput.style.display = 'none';
    
                // Clear existing fields
                singleFields.innerHTML = '';
    
                // Add button to dynamically add more fields
                const addFieldBtn = document.createElement('button');
                addFieldBtn.className = 'add-field-btn';
                addFieldBtn.innerText = 'Add More Fields';
                addFieldBtn.addEventListener('click', function (e) {
                    e.preventDefault();
    
                    const div = document.createElement('div');
                    div.className = 'input-container';
                    div.innerHTML = `
                        <label>Additional Field</label>
                        <input type="text" name="field_name_${Date.now()}" placeholder="Enter field name">
                        <button class="delete-btn">Delete</button>
                    `;
                    div.querySelector('.delete-btn').addEventListener('click', function () {
                        div.remove();
                    });
                    singleFields.appendChild(div);
                });
    
                singleFields.appendChild(addFieldBtn);
    
            } else if (option === 'zip') {
                singleFields.style.display = 'none';
                excelFileLabel.style.display = 'block';
                excelFileInput.style.display = 'block';
    
                // Remove existing dynamic fields and button for the single option
                singleFields.innerHTML = '';
            }
        });
    
        // Initialize the form based on the current selection on page load
        window.addEventListener('load', function() {
            const currentOption = document.getElementById('download_option').value;
            const singleFields = document.getElementById('single-certificate-fields');
            const excelFileLabel = document.getElementById('excel_file_label');
            const excelFileInput = document.getElementById('excel_file');
    
            if (currentOption === 'single') {
                singleFields.style.display = 'block';
                excelFileLabel.style.display = 'none';
                excelFileInput.style.display = 'none';
    
                // Add button to dynamically add more fields
                const addFieldBtn = document.createElement('button');
                addFieldBtn.className = 'add-field-btn';
                addFieldBtn.innerText = 'Add More Fields';
                addFieldBtn.addEventListener('click', function (e) {
                    e.preventDefault();
    
                    const div = document.createElement('div');
                    div.className = 'input-container';
                    div.innerHTML = `
                        <label>Additional Field</label>
                        <input type="text" name="field_name_${Date.now()}" placeholder="Enter field name">
                        <button class="delete-btn">Delete</button>
                    `;
                    div.querySelector('.delete-btn').addEventListener('click', function () {
                        div.remove();
                    });
                    singleFields.appendChild(div);
                });
    
                singleFields.appendChild(addFieldBtn);
    
            } else {
                singleFields.style.display = 'none';
                excelFileLabel.style.display = 'block';
                excelFileInput.style.display = 'block';
            }
        });
    
        // Before submitting the form, replace the field names with user input
        document.querySelector('form').addEventListener('submit', function() {
            document.querySelectorAll('.input-container').forEach(container => {
                const input = container.querySelector('input[type="text"]');
                const fieldName = input.value.trim();
                if (fieldName) {
                    input.name = `field_name_${fieldName}`;
                }
            });
        });
    </script>
    
</body>
</html>











<!--skjsbcdshcbsdhcbs-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial, initial-scale=1.0">
    <title>Certificate Generator</title>
    <style>
body {
    font-family: Arial, sans-serif;
    background-color: #f0f0f0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}




    </style>
</head>
<body>
    <div class="container">
        <h1>Certificate Generator</h1>
        <form action="/" method="post" enctype="multipart/form-data">
            <label for="template">Upload Certificate Template</label>
            <input type="file" name="template" id="template" required>

            <label for="download_option">Select Generation Option</label>
            <select name="download_option" id="download_option" required>
                <option value="single">Single Certificate</option>
                <option value="zip">Generate Zip for Multiple Certificates</option>
            </select>

            <div id="single-certificate-fields" class="single-certificate-fields">
                <!-- Dynamic fields will be generated here for single certificate -->
            </div>

            <label for="excel_file" id="excel_file_label" style="display:none;">Upload Excel File (for multiple certificates)</label>
            <input type="file" name="excel_file" id="excel_file" style="display:none;">

            <button type="submit">Next</button>
        </form>
    </div>
    
</body>
</html> -->
